"use strict";(self.webpackChunklearn=self.webpackChunklearn||[]).push([[2720],{385:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/generate-smart-contract-07e92bc1498c4c30405a5837f80c9601.png"},576:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/deploy-1f02eb4c0231dcce3424450db14fdc35.png"},2640:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/execute-ba2554ccb195234464c4567cf966f0fe.png"},2682:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/deploy-response-608ba9d095e7ddf582d7bf0abd9e1af5.png"},4137:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/deploy-signature-d3bb8ab3a7f16aed04122bc5a6c540ab.png"},4889:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/register-call-back-d5087b5a024eb8ed2426f343ceee9392.png"},5137:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/subscribe-6ffaf0eb741d46355d2053ac392b28aa.png"},7172:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"developer-guides/smart-contracts/examples","title":"Example Smart Contracts","description":"Voting Contract","source":"@site/docs/developer-guides/smart-contracts/examples.md","sourceDirName":"developer-guides/smart-contracts","slug":"/developer-guides/smart-contracts/examples","permalink":"/docs/developer-guides/smart-contracts/examples","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Example Smart Contracts","sidebar_label":"Example Smart Contracts"},"sidebar":"docs","previous":{"title":"Write and Deploy a Contract","permalink":"/docs/developer-guides/smart-contracts/write-deploy"},"next":{"title":"What is Xell Wallet?","permalink":"/docs/xell-wallet/what-is-xell"}}');var r=n(4848),s=n(8453);const c={title:"Example Smart Contracts",sidebar_label:"Example Smart Contracts"},o="Example Smart Contracts",i={},l=[{value:"Voting Contract",id:"voting-contract",level:2},{value:"1. Clone the Voting Smart Contract",id:"1-clone-the-voting-smart-contract",level:3},{value:"2. Generate WASM &amp; Run Server",id:"2-generate-wasm--run-server",level:3},{value:"3. Generate the Smart Contract",id:"3-generate-the-smart-contract",level:3},{value:"4. Subscribe to Smart Contract",id:"4-subscribe-to-smart-contract",level:3},{value:"5. Register Callback URL",id:"5-register-callback-url",level:3},{value:"6. Deploy the Smart Contract",id:"6-deploy-the-smart-contract",level:3},{value:"7. Execute the Smart Contract",id:"7-execute-the-smart-contract",level:3},{value:"8. Display Smart Contract Chain Data",id:"8-display-smart-contract-chain-data",level:3}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"example-smart-contracts",children:"Example Smart Contracts"})}),"\n",(0,r.jsx)(t.h2,{id:"voting-contract",children:"Voting Contract"}),"\n",(0,r.jsxs)(t.p,{children:["This contract allows users to ",(0,r.jsx)(t.strong,{children:"register a color"}),", ",(0,r.jsx)(t.strong,{children:"vote"})," for one, and ",(0,r.jsx)(t.strong,{children:"retrieve the winning color"}),". It's written in ",(0,r.jsx)(t.strong,{children:"Rust"}),", compiled to ",(0,r.jsx)(t.strong,{children:"WASM"}),", and deployed on the ",(0,r.jsx)(t.strong,{children:"Rubix blockchain"}),"."]}),"\n",(0,r.jsx)(t.h1,{id:"smart-contract-setup-steps-for-voting-contract",children:"Smart Contract Setup Steps for Voting Contract"}),"\n",(0,r.jsx)(t.h3,{id:"1-clone-the-voting-smart-contract",children:"1. Clone the Voting Smart Contract"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"git clone https://github.com/rubixchain/rubix-dapps\ncd contracts\ncd voting-contract\n"})}),"\n",(0,r.jsx)(t.h3,{id:"2-generate-wasm--run-server",children:"2. Generate WASM & Run Server"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"cd voting-contract\ncargo build --target wasm32-unknown-unknown\n"})}),"\n",(0,r.jsx)(t.p,{children:"The WASM file will be generated at:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"target/wasm32-unknown-unknown/debug/voting_contract.wasm\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Create a folder ",(0,r.jsx)(t.code,{children:"artifacts"})," and copy the wasm file into it."]}),"\n",(0,r.jsx)(t.p,{children:"To run the DApp server:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"go run main.go\n"})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"3-generate-the-smart-contract",children:"3. Generate the Smart Contract"}),"\n",(0,r.jsxs)(t.p,{children:["Open Swagger at: ",(0,r.jsx)(t.code,{children:"http://localhost:<port at which node is running>/swagger/index.html"})]}),"\n",(0,r.jsxs)(t.p,{children:["From the deployer node, we will generate the contract using ",(0,r.jsx)(t.code,{children:"/api/genarate-smart-contract"})," . It has 4 params:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"did"})," : Provide the Deployer DID"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"binaryCodePath"})," :  Upload WASM contract here"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"rawCodePath"})," : Upload the contract source code file (",(0,r.jsx)(t.code,{children:"voting_contract/src/lib.rs"}),")"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"schemaFilePath"})," : Upload the Schema File Path (",(0,r.jsx)(t.code,{children:"store_state/vote_contract/votefile.json"}),")"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Generate smart contract",src:n(385).A+"",width:"1429",height:"713"})}),"\n",(0,r.jsxs)(t.p,{children:["Get the contract tokenID from the output (example: ",(0,r.jsx)(t.code,{children:"QmXyz..."}),")"]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Note:"})," For all the following steps you can use either swagger or CLI."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"4-subscribe-to-smart-contract",children:"4. Subscribe to Smart Contract"}),"\n",(0,r.jsx)(t.p,{children:"In Rubix\u2019s stateless, event-driven architecture, not all nodes are aware of every smart contract by default. To participate in or track the execution of a specific contract, a node must explicitly subscribe to it. This subscription uses a publish-subscribe (pub-sub) mechanism that ensures only interested nodes receive updates or execution events related to the contract. By subscribing, a node signals that it wants to stay in sync with the contract\u2019s state transitions and be notified when actions like execution or deployment occur. Without subscribing, a node would remain unaware of these updates, as Rubix does not broadcast all contract activity globally like traditional blockchains."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Subscribe smart contract",src:n(5137).A+"",width:"1426",height:"797"})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"curl -X POST http://localhost:20000/api/subscribe-smart-contract \\\n-H 'Content-Type: application/json' \\\n-d '{\"smartContractToken\": \"<Smart Contract Token Hash>\"}'\n"})}),"\n",(0,r.jsx)(t.h3,{id:"5-register-callback-url",children:"5. Register Callback URL"}),"\n",(0,r.jsx)(t.p,{children:"Since Rubix is designed to be stateless, it ensures that the blockchain itself does not bear the computational or storage load of executing smart contract logic."}),"\n",(0,r.jsxs)(t.p,{children:["To facilitate this, when a smart contract is executed via the Rubix node, the node sends a POST request to a Callback URL registered by the developer or user. This URL typically points to a server (e.g., ",(0,r.jsx)(t.code,{children:"http://localhost:8080/api/contract-input"}),") which:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Receives the smart contract execution request."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Loads the corresponding WASM file."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Calls the appropriate function inside the WASM using a compatible runtime."}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"Reads/writes to external state (like JSON, databases, or other storage)."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Register callback",src:n(4889).A+"",width:"1426",height:"796"})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'curl -X POST http://localhost:20000/api/register-callback-url \\\n-H \'Content-Type: application/json\' \\\n-d \'{\n  "CallBackURL": "http://localhost:8080/api/contract-input",\n  "SmartContractToken": "<Smart Contract Token Hash>"\n}\'\n'})}),"\n",(0,r.jsx)(t.h3,{id:"6-deploy-the-smart-contract",children:"6. Deploy the Smart Contract"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"We will now proceed to deploy the contract from the Deployer node and commit 1 RBT to it:"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Deploy smart contract",src:n(576).A+"",width:"1430",height:"650"})}),"\n",(0,r.jsx)(t.p,{children:"-you will get response with an ID, use it to do the signature."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Deploy response",src:n(2682).A+"",width:"1426",height:"803"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"confirm deployment of the smart contract by doing the signature"}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Signature",src:n(4137).A+"",width:"1424",height:"806"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'\n```bash\ncurl -X POST http://localhost:20000/api/deploy-smart-contract \\\n-H \'Content-Type: application/json\' \\\n-d \'{\n  "comment": "deploying..",\n  "deployerAddr": "<Deployer DID>",\n  "quorumType": 2,\n  "rbtAmount": 1,\n  "smartContractToken": "<Smart Contract Token Hash>"\n}\'\n'})}),"\n",(0,r.jsx)(t.p,{children:"Then, confirm using:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'curl -X POST http://localhost:20000/api/signature-response \\\n-H \'Content-Type: application/json\' \\\n-d \'{\n  "id": "<UUID from deploy response>",\n  "mode": 0,\n  "password": "mypassword"\n}\'\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"7-execute-the-smart-contract",children:"7. Execute the Smart Contract"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:'we can now proceed to execute the contract with "Red" as a vote.'}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Execute smart contract",src:n(2640).A+"",width:"1401",height:"802"})}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"similar to deployment of the smart contract, use the output of the execute smart contract to go ahead with the signature response."}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'curl -X POST http://localhost:20000/api/execute-smart-contract \\\n-H \'Content-Type: application/json\' \\\n-d \'{\n  "comment": "executing..",\n  "executorAddr": "<Executor DID>",\n  "quorumType": 2,\n  "smartContractData": "Red",\n  "smartContractToken": "<Smart Contract Token Hash>"\n}\'\n'})}),"\n",(0,r.jsx)(t.p,{children:"Then, confirm using:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'curl -X POST http://localhost:20000/api/signature-response \\\n-H \'Content-Type: application/json\' \\\n-d \'{\n  "id": "<UUID from execute response>",\n  "mode": 0,\n  "password": "mypassword"\n}\'\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"8-display-smart-contract-chain-data",children:"8. Display Smart Contract Chain Data"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Full Chain:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'curl -X POST http://localhost:20000/api/get-smart-contract-token-chain-data \\\n-H \'Content-Type: application/json\' \\\n-d \'{\n  "latest": false,\n  "token": "<Smart Contract Token Hash>"\n}\'\n'})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"Latest Block:"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'curl -X POST http://localhost:20000/api/get-smart-contract-token-chain-data \\\n-H \'Content-Type: application/json\' \\\n-d \'{\n  "latest": true,\n  "token": "<Smart Contract Token Hash>"\n}\'\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var a=n(6540);const r={},s=a.createContext(r);function c(e){const t=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);